version: '3'

services:
  pib-blockly-server:
    image: pib-blockly-server
    build:
      context: ./pib_blockly/pib_blockly_server
      dockerfile: ./Dockerfile
    command: "node /app/dist/pib_blockly_server_bundle.js"
    networks:
      - pib-network
    ports:
      - "2442:2442"
    restart: always

  flask-app:
    image: flask_api
    build:
      context: .
      dockerfile: ./pib_api/flask/Dockerfile
    command: "bash -c 'flask --app run db upgrade && flask --app run seed_db && flask --app run run --host 0.0.0.0'"
    networks:
      - pib-network
    ports:
      - "5000:5000"
    environment:
      - SQLALCHEMY_DATABASE_URI=sqlite:////app/pibdata.db
      - PIB_BLOCKLY_SERVER_URL=http://pib-blockly-server:2442
    volumes:
      - ./pib_api/flask/:/app
      - programs:/root/cerebra_programs
    restart: always
    depends_on:
      - pib-blockly-server

  rosbridge-ws:
    build:
      context: ./ros_packages
      dockerfile: ./rosbridge/Dockerfile
    command: ros2 launch rosbridge_server rosbridge_websocket_launch.xml
    networks:
      - pib-network
    restart: always
    ports:
      - "9090:9090"

  ros-camera:
    image: ros-camera
    privileged: true
    build:
      context: ./ros_packages
      dockerfile: ./camera/Dockerfile
    command: ros2 run oak_d_lite stereo
    profiles:
      - all
      - camera
    # Volume binding should not be necessary here,
    # but removing will stop the camera from showing pictures for some reason
    volumes:
      - /dev/:/dev/
    devices:
      - /dev/bus/usb:/dev/bus/usb
    networks:
      - pib-network
    restart: always
    depends_on:
      - rosbridge-ws

  ros-motors:
    image: ros_motors
    build:
      context: .
      dockerfile: ./ros_packages/motors/Dockerfile
    command: ros2 launch motors launch.py
    profiles:
      - all
      - motors
    networks:
      - pib-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - FLASK_API_BASE_URL=http://flask-app:5000
      - PIB_BLOCKLY_SERVER_URL=http://pib-blockly-server:2442
      - TINKERFORGE_HOST=host.docker.internal
      - TINKERFORGE_PORT=4223
    restart: always
    depends_on:
      - rosbridge-ws
      - flask-app
      
  pibsim_webots:
    image: pibsim_webots
    build:
      context: .
      dockerfile: ./ros_packages/pibsim_webots/Dockerfile
    command: ros2 launch pibsim_webots pib_launch.py
    volumes:
      # this is a socket that is used by the x-windowing-system
      # for communication between clients and servers on the same
      # machine. By mounting the socket of the docker-host, the 
      # display-node uses the x-server running on the host for
      # graphics-related communication
      - /tmp/.X11-unix:/tmp/.X11-unix 
    profiles:
      - pibsim_webots
    networks:
      - pib-network
    environment:
      - DISPLAY=:0.0
    restart: no

  ros-voice-assistant:
    image: ros_voice_assistant
    build:
      context: .
      dockerfile: ./ros_packages/voice_assistant/Dockerfile
    command: ros2 launch voice_assistant launch.py
    privileged: true
    profiles:
      - all
      - voice_assistant
    networks:
      - pib-network
    env_file:
      - password.env
    environment:
      - PULSE_SERVER=unix:${XDG_RUNTIME_DIR}/pulse/native
      - ALSA_CARD=Generic
      - FLASK_API_BASE_URL=http://flask-app:5000
      - VOICE_ASSISTANT_DIR=/app/ros2_ws/voice_assistant
    volumes:
      - /media/dyan/project/projects/voice/:/data/voice
      - /dev/snd:/dev/snd
      - /dev/dsp:/dev/dsp
      - /etc/machine-id:/etc/machine-id
      - ${XDG_RUNTIME_DIR}/pulse/native:${XDG_RUNTIME_DIR}/pulse/native
      - ~/.config/pulse/cookie:/root/.config/pulse/cookie
    restart: always
    depends_on:
      - rosbridge-ws
      - flask-app
      - pib-blockly-server

  ros-programs:
    image: ros_programs
    build:
      context: .
      dockerfile: ./ros_packages/programs/Dockerfile
    command: ros2 launch programs launch.py
    profiles:
      - all
      - programs
    environment:
      - FLASK_API_BASE_URL=http://flask-app:5000
      - PIB_BLOCKLY_SERVER_URL=http://pib-blockly-server:2442
      - TINKERFORGE_HOST=host.docker.internal
      - TINKERFORGE_PORT=4223
      - PYTHON_BINARY=/usr/bin/python3
      - PROGRAM_DIR=/ros2_ws/cerebra_programs
      - VOICE_ASSISTANT_DIR=/app/ros2_ws/voice_assistant
    volumes:
      - programs:/ros2_ws/cerebra_programs
    restart: always
    networks:
      - pib-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - rosbridge-ws
      - pib-blockly-server
      - flask-app

  ros-display:
    image: ros-display
    privileged: true
    build:
      context: .
      dockerfile: ./ros_packages/display/Dockerfile
    profiles:
      - all
      - display
    volumes:
      # this is a socket that is used by the x-windowing-system
      # for cmmunication betweem clients and servers on the same
      # machine. By mounting the socket of the docker-host, the 
      # display-node uses the x-server running on the host for
      # graphics-related communication
      - /tmp/.X11-unix:/tmp/.X11-unix 
    environment:
      - STATIC_IMAGE_DIR=/app/ros2_ws/display/static_images
      - DISPLAY=:0.0
    command: ros2 launch display launch.py
    restart: always
    networks:
      - pib-network

volumes:
  programs:

networks:
  pib-network:
    driver: bridge

